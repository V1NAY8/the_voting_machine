ORG 00H
	MOV P0,#0FFH ; // PORT0 IS INPUT
	MOV P1,#0 // PORT1 IS OUTPUT
	MOV P3,#0 // PORT3 IS OUTPUT
	MOV R0,#00H
	MOV R1,#00H
	MOV R2,#00H
	MOV R3,#00H
	MOV R4,#00H
	MOV R5,#00H
	MOV R6,#00H
	MOV R7,#00H
	;use 2 lines and 5x7 matrix
	MOV A,#38H 
	ACALL CMND
	; lcd on cursor on and cursor blinking on
	MOV A, #0EH 
	ACALL CMND
	; Clear Screen
	MOV A, #01H 
	ACALL CMND
	; Increment Screen
	MOV A,#06H 
	ACALL CMND
	; Cursor line 1 Position 1
	MOV A,#80H 
	ACALL CMND
	
	; Displaying A, B, C initially
	MOV A, #84H
	ACALL CMND
	MOV A, #'A'
	ACALL DISP
	
	MOV A, #0C3H
	ACALL CMND
	
	MOV A, #'0'
	ACALL DISP
	
	MOV A, #'0'
	ACALL DISP
	
	MOV A, #88H
	ACALL CMND
	
	MOV A, #'B'
	ACALL DISP
	
	MOV A, #0C7H
	ACALL CMND
	
	MOV A, #'0'
	ACALL DISP
	
	MOV A, #'0'
	ACALL DISP
	
	MOV A, #8CH
	ACALL CMND
	
	MOV A, #'C'
	ACALL DISP
	
	MOV A, #0CBH
	ACALL CMND
	
	MOV A, #'0'
	ACALL DISP
	
	MOV A, #'0'
	ACALL DISP
	
	// CHECKING OF KEY PRESS BY VOTER//
HERE:
	;CONDITION CHECK FOR 1ST PERSON
	// PORT 0 IS FOR KEYS P0.0 FOR FIRST PERSON AND P0.1 FOR SECOND AND P0.2 FOR 3RD
	// ALL KEYS ARE ACTIVE LOW
	JB P0.0,L0
	ACALL DELAY1
	JB P0.0,L0
	JNB P0.0,$
	INC R1
	INC R4	
	//MOV R7,P2
	//CJNE R7, #01H,L0
	JMP LABEL1
	; CONDITION CHECK FOR 2ND PERSON
L0:
	JB P0.1,L1
	ACALL DELAY1
	JB P0.1,L1
	JNB P0.1,$
	
	//MOV R7,P2
	//CJNE R7, #02H,L1
	INC R2
	INC R4
	JMP LABEL2
	;CONDITION CHECK FOR 3RD PERSON
L1:
	JB P0.2,L2
	ACALL DELAY1
	JB P0.2,L2
	JNB P0.2,$
	
	//MOV R7,P2
	//CJNE R7, #04H,L2
	INC R3
	INC R4
	JMP LABEL3
	;IF NONE MATCHES CHECK IF MAX VOTES IS 50 OTHERWISE LOOP
L2:
	;MOV P2,#00H	
	CJNE R4, #10,HERE
	
	SJMP FINAL
	;TO DISPLAY 1ST MEMBER VOTE
LABEL1:
	
	;PACKED TO UNPACKED
	MOV A, #0C3H
	ACALL CMND
	MOV A,R1
	MOV B,#10
	DIV AB
	ADD A, #48
	ACALL DISP
	MOV A,B
	ADD A, #48
	ACALL DISP
	JMP L2
	;TO DISPLAY 2ND MEMBER VOTE
LABEL2:
	MOV A, #0C7H
	ACALL CMND
	
	;PACKED TO UNPACKED
	MOV A,R2
	MOV B,#10
	DIV AB
	ADD A, #48
	ACALL DISP
	MOV A,B
	ADD A, #48
	ACALL DISP
	JMP L2
	;TO DISPLAY 3RD MEMBER VOTE
LABEL3:
	MOV A, #0CBH
	ACALL CMND
	;PACKED TO UNPACKED
	MOV A,R3
	MOV B,#10
	DIV AB
	ADD A, #48
	ACALL DISP
	MOV A,B
	ADD A, #48
	ACALL DISP
	JMP L2
	;DISPLAY GREATEST OUTPUT ON SCREEN
	
;FIND THE GREATEST AND DISPLAY FINAL OUTPUT ON SCREEN	
FINAL:
	MOV A,# 01H
	ACALL CMND
	
	MOV A, #81H
	ACALL CMND
	
	MOV A ,#'W'
	ACALL DISP
	MOV A ,#'I'
	ACALL DISP
	MOV A ,#'N'
	ACALL DISP
	MOV A ,#'N'
	ACALL DISP
	MOV A ,#'E'
	ACALL DISP

	MOV A ,#'R'
	ACALL DISP
	
	MOV A ,#' '
	ACALL DISP
	
	MOV A ,#'I'
	ACALL DISP
	
	MOV A ,#'S'
	ACALL DISP
	
	
	MOV A ,#' '
	ACALL DISP
	
	ACALL GREATEST ; A CONTAINS VARIABLE OF PERSON WHO IS GREATEST
		
AGAIN:	SJMP AGAIN

FINAL1:
	MOV A,R1
	MOV B,#10
	DIV AB
	ADD A, #48
	ACALL DISP
	MOV A,B
	ADD A, #48
	ACALL DISP
	JMP AGAIN

FINAL2:
	MOV A,R2
	MOV B,#10
	DIV AB
	ADD A, #48
	ACALL DISP
	MOV A,B
	ADD A, #48
	ACALL DISP
	JMP AGAIN
FINAL3:
	MOV A,R3
	MOV B,#10
	DIV AB
	ADD A, #48
	ACALL DISP
	MOV A,B
	ADD A, #48
	ACALL DISP
	JMP AGAIN
	; TO DISPLAY COMMANDS
CMND:
	MOV P1,A
	CLR P3.5 ; // rs = 0 ; command
	SETB P3.4 //  ENABLE IS SET
	NOP
	NOP
	CLR P3.4 // ENABLE IS CLEAR TO MAKE A RECTANGULAR PULSE OF >500 NANO SEC
	// NO NEED OF READ/WRITE PIN AS IT IS ONLY FOR WRITING ON  LCD, THE PIN ON THE BOARD IS ALREADY GROUNDED, MADE 0.
	ACALL DELAY
	RET
	; TO DISPLAY DATA
DISP:
	MOV P1,A
	SETB P3.5 ;// rs =1 data reg
	SETB P3.4 //  ENABLE IS SET
	NOP
	NOP
	CLR P3.4 // ENABLE IS CLEAR TO MAKE A RECTANGULAR PULSE OF >500 NANO SEC
	// NO NEED OF READ/WRITE PIN AS IT IS ONLY FOR WRITING ON  LCD, THE PIN ON THE BOARD IS ALREADY GROUNDED, MADE 0.
	ACALL DELAY
	RET
	; TO FIND GREATEST OF THREE NUMBERS
GREATEST:
	MOV A,R1
	SUBB A,R2
	JC X
	MOV A,R1
	SUBB A,R3
	JC Y
	MOV A,#'A'
	ACALL DISP
	MOV A, #' '
	ACALL DISP
	ACALL FINAL1
	X:
	MOV A,R2
	SUBB A,R3
	JC Y
	MOV A,#'B'
	ACALL DISP
	MOV A, #' '
	ACALL DISP
	ACALL FINAL2
	Y:
	MOV A,#'C'
	ACALL DISP
	MOV A, #' '
	ACALL DISP
	ACALL FINAL3
	;DELAY FOR BLINKING OF CURSOR
DELAY1:
		MOV 65H,#255
LN:		MOV 66H,#255
		DJNZ 66H,$
		DJNZ 65H,LN
		RET
DELAY:
	MOV R5,#50
	GO1: MOV R6, #0FFH
	GO: DJNZ R6,GO
	DJNZ R5, GO1
	RET
	END